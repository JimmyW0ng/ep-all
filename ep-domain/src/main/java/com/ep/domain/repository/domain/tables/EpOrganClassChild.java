/*
 * This file is generated by jOOQ.
*/
package com.ep.domain.repository.domain.tables;


import com.ep.domain.repository.domain.Ep;
import com.ep.domain.repository.domain.Keys;
import com.ep.domain.repository.domain.tables.records.EpOrganClassChildRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 机构班级孩子表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EpOrganClassChild extends TableImpl<EpOrganClassChildRecord> {

    /**
     * The reference instance of <code>ep.ep_organ_class_child</code>
     */
    public static final EpOrganClassChild EP_ORGAN_CLASS_CHILD = new EpOrganClassChild();
    private static final long serialVersionUID = -1399357476;
    /**
     * The column <code>ep.ep_organ_class_child.id</code>. 主键
     */
    public final TableField<EpOrganClassChildRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");
    /**
     * The column <code>ep.ep_organ_class_child.class_id</code>. 班级id
     */
    public final TableField<EpOrganClassChildRecord, Long> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "班级id");
    /**
     * The column <code>ep.ep_organ_class_child.child_id</code>. 孩子id
     */
    public final TableField<EpOrganClassChildRecord, Long> CHILD_ID = createField("child_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "孩子id");
    /**
     * The column <code>ep.ep_organ_class_child.order_id</code>. 订单id
     */
    public final TableField<EpOrganClassChildRecord, Long> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "订单id");
    /**
     * The column <code>ep.ep_organ_class_child.honor_num</code>. 获得的荣誉数
     */
    public final TableField<EpOrganClassChildRecord, Integer> HONOR_NUM = createField("honor_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "获得的荣誉数");
    /**
     * The column <code>ep.ep_organ_class_child.schedule_comment_num</code>. 获得的老师评价数
     */
    public final TableField<EpOrganClassChildRecord, Integer> SCHEDULE_COMMENT_NUM = createField("schedule_comment_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "获得的老师评价数");
    /**
     * The column <code>ep.ep_organ_class_child.bespeaked_schedule_num</code>. 已预约数（正常班次订单为0）
     */
    public final TableField<EpOrganClassChildRecord, Integer> BESPEAKED_SCHEDULE_NUM = createField("bespeaked_schedule_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "已预约数（正常班次订单为0）");
    /**
     * The column <code>ep.ep_organ_class_child.course_comment_flag</code>. 是否评论课程
     */
    public final TableField<EpOrganClassChildRecord, Boolean> COURSE_COMMENT_FLAG = createField("course_comment_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否评论课程");
    /**
     * The column <code>ep.ep_organ_class_child.create_at</code>. 创建时间
     */
    public final TableField<EpOrganClassChildRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");
    /**
     * The column <code>ep.ep_organ_class_child.update_at</code>. 更新时间
     */
    public final TableField<EpOrganClassChildRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");
    /**
     * The column <code>ep.ep_organ_class_child.remark</code>. 备注
     */
    public final TableField<EpOrganClassChildRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "备注");
    /**
     * The column <code>ep.ep_organ_class_child.del_flag</code>. 删除标记
     */
    public final TableField<EpOrganClassChildRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标记");
    /**
     * The column <code>ep.ep_organ_class_child.version</code>.
     */
    public final TableField<EpOrganClassChildRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>ep.ep_organ_class_child</code> table reference
     */
    public EpOrganClassChild() {
        this("ep_organ_class_child", null);
    }

    /**
     * Create an aliased <code>ep.ep_organ_class_child</code> table reference
     */
    public EpOrganClassChild(String alias) {
        this(alias, EP_ORGAN_CLASS_CHILD);
    }

    private EpOrganClassChild(String alias, Table<EpOrganClassChildRecord> aliased) {
        this(alias, aliased, null);
    }

    private EpOrganClassChild(String alias, Table<EpOrganClassChildRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "机构班级孩子表");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EpOrganClassChildRecord> getRecordType() {
        return EpOrganClassChildRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ep.EP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EpOrganClassChildRecord, Long> getIdentity() {
        return Keys.IDENTITY_EP_ORGAN_CLASS_CHILD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EpOrganClassChildRecord> getPrimaryKey() {
        return Keys.KEY_EP_ORGAN_CLASS_CHILD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EpOrganClassChildRecord>> getKeys() {
        return Arrays.<UniqueKey<EpOrganClassChildRecord>>asList(Keys.KEY_EP_ORGAN_CLASS_CHILD_PRIMARY, Keys.KEY_EP_ORGAN_CLASS_CHILD_UNIQUE_ORDER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<EpOrganClassChildRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EpOrganClassChild as(String alias) {
        return new EpOrganClassChild(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EpOrganClassChild rename(String name) {
        return new EpOrganClassChild(name, null);
    }
}
