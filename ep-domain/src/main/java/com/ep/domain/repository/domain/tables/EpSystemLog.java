/*
 * This file is generated by jOOQ.
*/
package com.ep.domain.repository.domain.tables;


import com.ep.domain.repository.domain.Ep;
import com.ep.domain.repository.domain.Keys;
import com.ep.domain.repository.domain.tables.records.EpSystemLogRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 日志表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EpSystemLog extends TableImpl<EpSystemLogRecord> {

    /**
     * The reference instance of <code>ep.ep_system_log</code>
     */
    public static final EpSystemLog EP_SYSTEM_LOG = new EpSystemLog();
    private static final long serialVersionUID = -254853139;
    /**
     * The column <code>ep.ep_system_log.id</code>. 编号
     */
    public final TableField<EpSystemLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "编号");
    /**
     * The column <code>ep.ep_system_log.module_name</code>. 模块名称
     */
    public final TableField<EpSystemLogRecord, String> MODULE_NAME = createField("module_name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "模块名称");
    /**
     * The column <code>ep.ep_system_log.module_desc</code>. 日志描述
     */
    public final TableField<EpSystemLogRecord, String> MODULE_DESC = createField("module_desc", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "日志描述");
    /**
     * The column <code>ep.ep_system_log.remote_addr</code>. 操作IP地址
     */
    public final TableField<EpSystemLogRecord, String> REMOTE_ADDR = createField("remote_addr", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "操作IP地址");
    /**
     * The column <code>ep.ep_system_log.operate_id</code>. 操作者ID
     */
    public final TableField<EpSystemLogRecord, Long> OPERATE_ID = createField("operate_id", org.jooq.impl.SQLDataType.BIGINT, this, "操作者ID");
    /**
     * The column <code>ep.ep_system_log.operate_name</code>. 操作者姓名
     */
    public final TableField<EpSystemLogRecord, String> OPERATE_NAME = createField("operate_name", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "操作者姓名");
    /**
     * The column <code>ep.ep_system_log.operate_method</code>. 操作方法
     */
    public final TableField<EpSystemLogRecord, String> OPERATE_METHOD = createField("operate_method", org.jooq.impl.SQLDataType.CLOB, this, "操作方法");
    /**
     * The column <code>ep.ep_system_log.request_url</code>. 请求URL
     */
    public final TableField<EpSystemLogRecord, String> REQUEST_URL = createField("request_url", org.jooq.impl.SQLDataType.VARCHAR.length(3000), this, "请求URL");
    /**
     * The column <code>ep.ep_system_log.params</code>. 操作提交的数据
     */
    public final TableField<EpSystemLogRecord, String> PARAMS = createField("params", org.jooq.impl.SQLDataType.CLOB, this, "操作提交的数据");
    /**
     * The column <code>ep.ep_system_log.result</code>. 操作返回的结果
     */
    public final TableField<EpSystemLogRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB, this, "操作返回的结果");
    /**
     * The column <code>ep.ep_system_log.exception</code>. 异常信息
     */
    public final TableField<EpSystemLogRecord, String> EXCEPTION = createField("exception", org.jooq.impl.SQLDataType.CLOB, this, "异常信息");
    /**
     * The column <code>ep.ep_system_log.operate_time</code>. 操作时间
     */
    public final TableField<EpSystemLogRecord, Timestamp> OPERATE_TIME = createField("operate_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "操作时间");

    /**
     * Create a <code>ep.ep_system_log</code> table reference
     */
    public EpSystemLog() {
        this("ep_system_log", null);
    }

    /**
     * Create an aliased <code>ep.ep_system_log</code> table reference
     */
    public EpSystemLog(String alias) {
        this(alias, EP_SYSTEM_LOG);
    }

    private EpSystemLog(String alias, Table<EpSystemLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private EpSystemLog(String alias, Table<EpSystemLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "日志表");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EpSystemLogRecord> getRecordType() {
        return EpSystemLogRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ep.EP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EpSystemLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_EP_SYSTEM_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EpSystemLogRecord> getPrimaryKey() {
        return Keys.KEY_EP_SYSTEM_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EpSystemLogRecord>> getKeys() {
        return Arrays.<UniqueKey<EpSystemLogRecord>>asList(Keys.KEY_EP_SYSTEM_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EpSystemLog as(String alias) {
        return new EpSystemLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EpSystemLog rename(String name) {
        return new EpSystemLog(name, null);
    }
}
