/*
 * This file is generated by jOOQ.
*/
package com.ep.domain.repository.domain.tables.records;


import com.ep.domain.repository.domain.tables.EpWechatUnifiedOrder;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * 微信支付统一订单
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EpWechatUnifiedOrderRecord extends UpdatableRecordImpl<EpWechatUnifiedOrderRecord> {

    private static final long serialVersionUID = 700725722;

    /**
     * Setter for <code>ep.ep_wechat_unified_order.id</code>. 主键
     */
    public EpWechatUnifiedOrderRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.order_id</code>. 订单id
     */
    public EpWechatUnifiedOrderRecord setOrderId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.order_id</code>. 订单id
     */
    public Long getOrderId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.appid</code>. appid
     */
    public EpWechatUnifiedOrderRecord setAppid(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.appid</code>. appid
     */
    public String getAppid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.mch_id</code>. 商户号
     */
    public EpWechatUnifiedOrderRecord setMchId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.mch_id</code>. 商户号
     */
    public String getMchId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.out_trade_no</code>. 商户订单号
     */
    public EpWechatUnifiedOrderRecord setOutTradeNo(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.out_trade_no</code>. 商户订单号
     */
    public String getOutTradeNo() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.body</code>. 商品描述
     */
    public EpWechatUnifiedOrderRecord setBody(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.body</code>. 商品描述
     */
    public String getBody() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.total_fee</code>. 标价金额，单位为分
     */
    public EpWechatUnifiedOrderRecord setTotalFee(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.total_fee</code>. 标价金额，单位为分
     */
    public Integer getTotalFee() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.spbill_create_ip</code>. 终端IP
     */
    public EpWechatUnifiedOrderRecord setSpbillCreateIp(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.spbill_create_ip</code>. 终端IP
     */
    public String getSpbillCreateIp() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.trade_type</code>. 交易类型
     */
    public EpWechatUnifiedOrderRecord setTradeType(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.trade_type</code>. 交易类型
     */
    public String getTradeType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.trade_state</code>. 交易状态：SUCCESS; REFUND; NOTPAY; CLOSED; REVOKED; USERPAYING; PAYERROR
     */
    public EpWechatUnifiedOrderRecord setTradeState(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.trade_state</code>. 交易状态：SUCCESS; REFUND; NOTPAY; CLOSED; REVOKED; USERPAYING; PAYERROR
     */
    public String getTradeState() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.return_code</code>. 接口返回结果
     */
    public EpWechatUnifiedOrderRecord setReturnCode(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.return_code</code>. 接口返回结果
     */
    public String getReturnCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.return_msg</code>. 接口返回信息
     */
    public EpWechatUnifiedOrderRecord setReturnMsg(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.return_msg</code>. 接口返回信息
     */
    public String getReturnMsg() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.result_code</code>. 业务结果
     */
    public EpWechatUnifiedOrderRecord setResultCode(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.result_code</code>. 业务结果
     */
    public String getResultCode() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.err_code</code>. 错误代码
     */
    public EpWechatUnifiedOrderRecord setErrCode(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.err_code</code>. 错误代码
     */
    public String getErrCode() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.err_code_des</code>. 错误代码描述
     */
    public EpWechatUnifiedOrderRecord setErrCodeDes(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.err_code_des</code>. 错误代码描述
     */
    public String getErrCodeDes() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.prepay_id</code>. 预支付交易会话标识
     */
    public EpWechatUnifiedOrderRecord setPrepayId(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.prepay_id</code>. 预支付交易会话标识
     */
    public String getPrepayId() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.notify_return_code</code>. 通知返回结果
     */
    public EpWechatUnifiedOrderRecord setNotifyReturnCode(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.notify_return_code</code>. 通知返回结果
     */
    public String getNotifyReturnCode() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.notify_return_msg</code>. 通知返回信息
     */
    public EpWechatUnifiedOrderRecord setNotifyReturnMsg(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.notify_return_msg</code>. 通知返回信息
     */
    public String getNotifyReturnMsg() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.notify_result_code</code>. 通知返回业务结果
     */
    public EpWechatUnifiedOrderRecord setNotifyResultCode(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.notify_result_code</code>. 通知返回业务结果
     */
    public String getNotifyResultCode() {
        return (String) get(18);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.notify_err_code</code>. 通知返回错误代码
     */
    public EpWechatUnifiedOrderRecord setNotifyErrCode(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.notify_err_code</code>. 通知返回错误代码
     */
    public String getNotifyErrCode() {
        return (String) get(19);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.notify_err_code_des</code>. 通知返回错误代码描述
     */
    public EpWechatUnifiedOrderRecord setNotifyErrCodeDes(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.notify_err_code_des</code>. 通知返回错误代码描述
     */
    public String getNotifyErrCodeDes() {
        return (String) get(20);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.is_subscribe</code>. 是否关注公众账号
     */
    public EpWechatUnifiedOrderRecord setIsSubscribe(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.is_subscribe</code>. 是否关注公众账号
     */
    public String getIsSubscribe() {
        return (String) get(21);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.openid</code>. 用户标识
     */
    public EpWechatUnifiedOrderRecord setOpenid(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.openid</code>. 用户标识
     */
    public String getOpenid() {
        return (String) get(22);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.bank_type</code>. 付款银行
     */
    public EpWechatUnifiedOrderRecord setBankType(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.bank_type</code>. 付款银行
     */
    public String getBankType() {
        return (String) get(23);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.transaction_id</code>. 微信支付订单号
     */
    public EpWechatUnifiedOrderRecord setTransactionId(String value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.transaction_id</code>. 微信支付订单号
     */
    public String getTransactionId() {
        return (String) get(24);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.time_end</code>. 支付完成时间
     */
    public EpWechatUnifiedOrderRecord setTimeEnd(String value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.time_end</code>. 支付完成时间
     */
    public String getTimeEnd() {
        return (String) get(25);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.create_at</code>. 创建时间
     */
    public EpWechatUnifiedOrderRecord setCreateAt(Timestamp value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(26);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.update_at</code>. 更新时间
     */
    public EpWechatUnifiedOrderRecord setUpdateAt(Timestamp value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(27);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.remark</code>. 备注
     */
    public EpWechatUnifiedOrderRecord setRemark(String value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(28);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.del_flag</code>. 删除标记
     */
    public EpWechatUnifiedOrderRecord setDelFlag(Boolean value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.del_flag</code>. 删除标记
     */
    public Boolean getDelFlag() {
        return (Boolean) get(29);
    }

    /**
     * Setter for <code>ep.ep_wechat_unified_order.version</code>.
     */
    public EpWechatUnifiedOrderRecord setVersion(Long value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>ep.ep_wechat_unified_order.version</code>.
     */
    public Long getVersion() {
        return (Long) get(30);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EpWechatUnifiedOrderRecord
     */
    public EpWechatUnifiedOrderRecord() {
        super(EpWechatUnifiedOrder.EP_WECHAT_UNIFIED_ORDER);
    }

    /**
     * Create a detached, initialised EpWechatUnifiedOrderRecord
     */
    public EpWechatUnifiedOrderRecord(Long id, Long orderId, String appid, String mchId, String outTradeNo, String body, Integer totalFee, String spbillCreateIp, String tradeType, String tradeState, String returnCode, String returnMsg, String resultCode, String errCode, String errCodeDes, String prepayId, String notifyReturnCode, String notifyReturnMsg, String notifyResultCode, String notifyErrCode, String notifyErrCodeDes, String isSubscribe, String openid, String bankType, String transactionId, String timeEnd, Timestamp createAt, Timestamp updateAt, String remark, Boolean delFlag, Long version) {
        super(EpWechatUnifiedOrder.EP_WECHAT_UNIFIED_ORDER);

        set(0, id);
        set(1, orderId);
        set(2, appid);
        set(3, mchId);
        set(4, outTradeNo);
        set(5, body);
        set(6, totalFee);
        set(7, spbillCreateIp);
        set(8, tradeType);
        set(9, tradeState);
        set(10, returnCode);
        set(11, returnMsg);
        set(12, resultCode);
        set(13, errCode);
        set(14, errCodeDes);
        set(15, prepayId);
        set(16, notifyReturnCode);
        set(17, notifyReturnMsg);
        set(18, notifyResultCode);
        set(19, notifyErrCode);
        set(20, notifyErrCodeDes);
        set(21, isSubscribe);
        set(22, openid);
        set(23, bankType);
        set(24, transactionId);
        set(25, timeEnd);
        set(26, createAt);
        set(27, updateAt);
        set(28, remark);
        set(29, delFlag);
        set(30, version);
    }
}
