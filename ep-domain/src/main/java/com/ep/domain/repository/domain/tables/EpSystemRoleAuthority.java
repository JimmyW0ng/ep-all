/*
 * This file is generated by jOOQ.
*/
package com.ep.domain.repository.domain.tables;


import com.ep.domain.repository.domain.Ep;
import com.ep.domain.repository.domain.Keys;
import com.ep.domain.repository.domain.tables.records.EpSystemRoleAuthorityRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 权限表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EpSystemRoleAuthority extends TableImpl<EpSystemRoleAuthorityRecord> {

    /**
     * The reference instance of <code>ep.ep_system_role_authority</code>
     */
    public static final EpSystemRoleAuthority EP_SYSTEM_ROLE_AUTHORITY = new EpSystemRoleAuthority();
    private static final long serialVersionUID = -1996007980;
    /**
     * The column <code>ep.ep_system_role_authority.id</code>. 主键
     */
    public final TableField<EpSystemRoleAuthorityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "主键");
    /**
     * The column <code>ep.ep_system_role_authority.role</code>. 角色名称
     */
    public final TableField<EpSystemRoleAuthorityRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");
    /**
     * The column <code>ep.ep_system_role_authority.authority</code>. 权限
     */
    public final TableField<EpSystemRoleAuthorityRecord, String> AUTHORITY = createField("authority", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "权限");
    /**
     * The column <code>ep.ep_system_role_authority.create_at</code>. 创建时间
     */
    public final TableField<EpSystemRoleAuthorityRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");
    /**
     * The column <code>ep.ep_system_role_authority.update_at</code>. 更新时间
     */
    public final TableField<EpSystemRoleAuthorityRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");
    /**
     * The column <code>ep.ep_system_role_authority.remark</code>. 备注信息
     */
    public final TableField<EpSystemRoleAuthorityRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "备注信息");
    /**
     * The column <code>ep.ep_system_role_authority.del_flag</code>. 删除标记
     */
    public final TableField<EpSystemRoleAuthorityRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标记");
    /**
     * The column <code>ep.ep_system_role_authority.version</code>.
     */
    public final TableField<EpSystemRoleAuthorityRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>ep.ep_system_role_authority</code> table reference
     */
    public EpSystemRoleAuthority() {
        this("ep_system_role_authority", null);
    }

    /**
     * Create an aliased <code>ep.ep_system_role_authority</code> table reference
     */
    public EpSystemRoleAuthority(String alias) {
        this(alias, EP_SYSTEM_ROLE_AUTHORITY);
    }

    private EpSystemRoleAuthority(String alias, Table<EpSystemRoleAuthorityRecord> aliased) {
        this(alias, aliased, null);
    }

    private EpSystemRoleAuthority(String alias, Table<EpSystemRoleAuthorityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "权限表");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EpSystemRoleAuthorityRecord> getRecordType() {
        return EpSystemRoleAuthorityRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ep.EP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EpSystemRoleAuthorityRecord, Long> getIdentity() {
        return Keys.IDENTITY_EP_SYSTEM_ROLE_AUTHORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EpSystemRoleAuthorityRecord> getPrimaryKey() {
        return Keys.KEY_EP_SYSTEM_ROLE_AUTHORITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EpSystemRoleAuthorityRecord>> getKeys() {
        return Arrays.<UniqueKey<EpSystemRoleAuthorityRecord>>asList(Keys.KEY_EP_SYSTEM_ROLE_AUTHORITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<EpSystemRoleAuthorityRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EpSystemRoleAuthority as(String alias) {
        return new EpSystemRoleAuthority(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EpSystemRoleAuthority rename(String name) {
        return new EpSystemRoleAuthority(name, null);
    }
}
